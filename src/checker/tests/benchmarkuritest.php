<?php
/**
 * chkBenchmarkUriTest Class PHP File
 * Created on January, the 12th 2010 at 21:26:14 by ronan
 *
 * @copyright Copyright (C) 2011 Ronan Guilloux. All rights reserved.
 * @license http://www.gnu.org/licenses/agpl.html GNU AFFERO GPL v3
 * @version //autogen//
 * @author Ronan Guilloux - coolforest.net
 * @package WebCheckerTests
 * @filesource benchmarkuritest.php
 */

/**
 * Test class for chkBenchmarkUri
 * Generated by PHPUnit on 2011-01-12 at 23:50:17.
 *
 * @package WebCheckerTests
 * @version //autogen//
 * @codeCoverageIgnore
 */
class chkBenchmarkUriTest extends PHPUnit_Framework_TestCase
{

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @group WebCheckerTests
     */
    protected function setUp()
    {
        $this->object = new chkBenchmarkUri();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @group WebCheckerTests
     */
    public function testGet()
    {
        $this->object->uriOptions = new chkStructUriOptions();
        $foo = $this->object->uriOptions;
    }

    /**
     * @expectedException ezcBasePropertyNotFoundException
     * @group WebCheckerTests
     */
    public function testGetExceptionOnNonExistingProperty()
    {
        $foo = $this->object->bar;
    }

    /**
     * @expectedException ezcBaseValueException
     * @group WebCheckerTests
     */
    public function testSetExceptionOnExistingOptionsPropertyWithWrongValue()
    {
        $this->object->uriOptions = -1;
    }

    /**
     * @expectedException ezcBaseValueException
     * @group WebCheckerTests
     */
    public function testSetExceptionOnExistingezcUrlPropertyWithWrongValue()
    {
        $this->object->url = new ezcUrl(); // string excepted
    }

    //    /**
    //     * @expectedException ezcBaseValueException
    //     * @group WebCheckerTests
    //     */
    //    public function testSetException_4()
    //    {
    //        $this->object->uriOptions->password = new ArrayObject( array() );
    //    }

    /**
     * @expectedException ezcBasePropertyNotFoundException
     * @group WebCheckerTests
     */
    public function testSetExceptionOnNonExistingProperty()
    {
        $this->object->foo = 'bar';
    }

    /**
     * @group WebCheckerTests
     */
    public function testIsset()
    {
        $this->object->uriOptions = new chkStructUriOptions();
        $this->assertTrue( isset( $this->object->uriOptions ) );
    }

    /**
     * @group WebCheckerTests
     */
    public function testToString()
    {
        (string)$foo = (string)$this->object;
    }

    /**
     * @group WebCheckerTests
     */
    public function testSimpleRun()
    {
        $uriOptions = $this->fillOptions( 'simpleRun' );
        $this->object->setUp( $uriOptions );
        $result = $this->object->run();       

        // tracing :

        //        var_export( "\n" . $result['headerSent'] );
        //        var_export( "\n" . $result['lastUrl'] );
        //        var_export( "\n" . $result['code'] );
        //        var_export( "\n" . $result['contentType'] );
        //        var_export( "\n" . $result['contentLength'] );
        //        var_export( "\n" . $result['fileTime'] );
        //        var_export( "\n" . $result['content'] );

        //        // Specify configuration
        //        $config = array(
        //           'indent'         => true,
        //           'output-xhtml'   => true,
        //           'wrap'           => 200
        //        );
        //
        //        // Tidy
        //        $tidy = new tidy;
        //        $tidy->parseString( $result['content'], $config, 'utf8' );
        //        // $tidy->cleanRepair();// => no xhtml error output plz
        //        // Output
        //        var_export( $tidy );

        $this->assertTrue( $result['result'] );
        
    }

    /**
     * @expectedException ezcUrlException
     * @group WebCheckerTests
     */
    public function testRunExceptionNoUrl()
    {
        $uriOptions = $this->fillOptions( 'noUrl' );
        $this->object->setUp( $uriOptions );
        $result = $this->object->run();
    }

    /**
     * @expectedException ezcUrlException
     * @group WebCheckerTests
     */
    public function testRunExceptionBadUrl()
    {
        $uriOptions = $this->fillOptions( 'badUrl' );
        $this->object->setUp( $uriOptions );
        $result = $this->object->run();
    }

    /**
     * @expectedException ezcUrlException
     * @group WebCheckerTests
     */
    public function testRunNoLogin()
    {
        $result = $this->object->run();
        $uriOptions = $this->fillOptions( 'noLogin' );
        $this->object->setUp( $uriOptions );
        $result = $this->object->run();
    }

    /**
     * @expectedException ezcUrlException
     * @group WebCheckerTests
     */
    public function testRunBadLogin()
    {
        $uriOptions = $this->fillOptions( 'badLogin' );
        $this->object->setUp( $uriOptions );
        $result = $this->object->run();
    }

    /**
     * @group WebCheckerTests
     */
    public function testRunGoodLogin()
    {
        $uriOptions = $this->fillOptions( 'goodLogin' );
        $this->object->setUp( $uriOptions );
        try
        {
            $result = $this->object->run();
        }
        catch (Exception $e)
        {
            $this->markTestSkipped('This test was skipped, the test url is probably no more available');
        }
    }

    /**
     * Fill chkStructUriOptions objects for tests purposes
     *
     * @param int $index
     */
    protected function fillOptions( $index )
    {
        switch ( $index )
        {
            case 'simpleRun' :
                return new chkStructUriOptions(
            		'http',
            		'incubator.apache.org',        	
                    array(),
                    array('zetacomponents','documentation', 'overview.html'),
                    null,
                   	'',
                    true,
                    null,
                    array( 'Apache Zeta Components' )
                );
                break;
            case 'noUrl' :
                return new chkStructUriOptions(
                    null,
            	    null,   	
                    array(),
                    array(),
                    null,
            		'',
                    true
                );
                break;
            case 'badUrl' :
                return new chkStructUriOptions(
                    null,
            		'foo:bar',        	
                    array(),
                    array(),
                    null,
            		'',
                    true
                );
                break;
            case 'noLogin' :
                return new chkStructUriOptions(
            		'http',
            		'92.243.31.245',        	
                    array(),
                    array( 'phpUnitStubs', 'hidden', 'index.html' ),
                    null,
            		'',
                    true,
                    null
                );
                break;
            case 'badLogin' :
                return new chkStructUriOptions(
            		'http',
            		'92.243.31.245',        	
                    array(),
                    array( 'phpUnitStubs', 'hidden', 'index.html' ),
                    null,
            		'',
                    true,
                	'null:null'
            	);
                break;
            case 'goodLogin' :
                return new chkStructUriOptions(
            		'http',
            		'92.243.31.245',        	
                    array(),
                    array( 'phpUnitStubs', 'hidden', 'index.html' ),
                    null,
            		'',
                    true,
                	'login:password'
                );
            break;
        }
        return array();
    }

}
?>
